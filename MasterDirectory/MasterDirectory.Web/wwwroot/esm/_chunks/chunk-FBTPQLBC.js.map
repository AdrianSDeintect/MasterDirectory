{
  "version": 3,
  "sources": ["../../../Modules/ServerTypes/Operaciones/CatalogosOperacionesColumns.ts", "../../../Modules/ServerTypes/Operaciones/CatalogosOperacionesRow.ts", "../../../Modules/ServerTypes/Operaciones/CatalogosOperacionesService.ts", "../../../Modules/ServerTypes/Operaciones/CategoriaOperacionesColumns.ts", "../../../Modules/ServerTypes/Operaciones/CategoriaOperacionesRow.ts", "../../../Modules/ServerTypes/Operaciones/CategoriaOperacionesService.ts", "../../../Modules/ServerTypes/Operaciones/CatalogosOperacionesForm.ts", "../../../Modules/ServerTypes/Operaciones/CategoriaOperacionesForm.ts"],
  "sourcesContent": ["\uFEFFexport class CatalogosOperacionesColumns {\r\n    static columnsKey = 'Operaciones.CatalogosOperaciones';\r\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib/q\";\n\nexport interface CatalogosOperacionesRow {\n    IdCons?: number;\n    IdtipoCatalogo?: number;\n    IdClave?: number;\n    Descripcion?: string;\n    Activo?: number;\n    NombreTipoCatalogo?: string;\n}\n\nexport abstract class CatalogosOperacionesRow {\n    static readonly idProperty = 'IdCons';\n    static readonly nameProperty = 'Descripcion';\n    static readonly localTextPrefix = 'Operaciones.CatalogosOperaciones';\n    static readonly deletePermission = 'Operaciones:Delete';\n    static readonly insertPermission = 'Operaciones:Modify';\n    static readonly readPermission = 'Operaciones:View';\n    static readonly updatePermission = 'Operaciones:Modify';\n\n    static readonly Fields = fieldsProxy<CatalogosOperacionesRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib/q\";\nimport { CatalogosOperacionesRow } from \"./CatalogosOperacionesRow\";\n\nexport namespace CatalogosOperacionesService {\n    export const baseUrl = 'Operaciones/CatalogosOperaciones';\n\n    export declare function Create(request: SaveRequest<CatalogosOperacionesRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<CatalogosOperacionesRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<CatalogosOperacionesRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<CatalogosOperacionesRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"Operaciones/CatalogosOperaciones/Create\",\n        Update: \"Operaciones/CatalogosOperaciones/Update\",\n        Delete: \"Operaciones/CatalogosOperaciones/Delete\",\n        Retrieve: \"Operaciones/CatalogosOperaciones/Retrieve\",\n        List: \"Operaciones/CatalogosOperaciones/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>CatalogosOperacionesService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFexport class CategoriaOperacionesColumns {\r\n    static columnsKey = 'Operaciones.CategoriaOperaciones';\r\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib/q\";\n\nexport interface CategoriaOperacionesRow {\n    LocalSap?: string;\n    Region?: string;\n    EdoLocal?: string;\n    Zona?: string;\n    Geo?: string;\n    MailGeo?: string;\n    DirectorRegional?: string;\n    HorarioLv?: string;\n    HorarioS?: string;\n    HorarioDyF?: string;\n}\n\nexport abstract class CategoriaOperacionesRow {\n    static readonly idProperty = 'LocalSap';\n    static readonly nameProperty = 'LocalSap';\n    static readonly localTextPrefix = 'Operaciones.CategoriaOperaciones';\n    static readonly deletePermission = 'Operaciones:Delete';\n    static readonly insertPermission = 'Operaciones:Modify';\n    static readonly readPermission = 'Operaciones:View';\n    static readonly updatePermission = 'Operaciones:Modify';\n\n    static readonly Fields = fieldsProxy<CategoriaOperacionesRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib/q\";\nimport { CategoriaOperacionesRow } from \"./CategoriaOperacionesRow\";\n\nexport namespace CategoriaOperacionesService {\n    export const baseUrl = 'Operaciones/CategoriaOperaciones';\n\n    export declare function Create(request: SaveRequest<CategoriaOperacionesRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<CategoriaOperacionesRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<CategoriaOperacionesRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<CategoriaOperacionesRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"Operaciones/CategoriaOperaciones/Create\",\n        Update: \"Operaciones/CategoriaOperaciones/Update\",\n        Delete: \"Operaciones/CategoriaOperaciones/Delete\",\n        Retrieve: \"Operaciones/CategoriaOperaciones/Retrieve\",\n        List: \"Operaciones/CategoriaOperaciones/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>CategoriaOperacionesService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFimport { LookupEditor, IntegerEditor, StringEditor, BooleanEditor, PrefixedContext } from \"@serenity-is/corelib\";\nimport { initFormType } from \"@serenity-is/corelib/q\";\n\nexport interface CatalogosOperacionesForm {\n    IdtipoCatalogo: LookupEditor;\n    IdClave: IntegerEditor;\n    Descripcion: StringEditor;\n    Activo: BooleanEditor;\n}\n\nexport class CatalogosOperacionesForm extends PrefixedContext {\n    static formKey = 'Operaciones.CatalogosOperaciones';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!CatalogosOperacionesForm.init)  {\n            CatalogosOperacionesForm.init = true;\n\n            var w0 = LookupEditor;\n            var w1 = IntegerEditor;\n            var w2 = StringEditor;\n            var w3 = BooleanEditor;\n\n            initFormType(CatalogosOperacionesForm, [\n                'IdtipoCatalogo', w0,\n                'IdClave', w1,\n                'Descripcion', w2,\n                'Activo', w3\n            ]);\n        }\n    }\n}", "\uFEFFimport { StringEditor, LookupEditor, PrefixedContext } from \"@serenity-is/corelib\";\nimport { initFormType } from \"@serenity-is/corelib/q\";\n\nexport interface CategoriaOperacionesForm {\n    LocalSap: StringEditor;\n    Region: LookupEditor;\n    EdoLocal: LookupEditor;\n    Zona: LookupEditor;\n    Geo: LookupEditor;\n    MailGeo: StringEditor;\n    DirectorRegional: LookupEditor;\n    HorarioLv: StringEditor;\n    HorarioS: StringEditor;\n    HorarioDyF: StringEditor;\n}\n\nexport class CategoriaOperacionesForm extends PrefixedContext {\n    static formKey = 'Operaciones.CategoriaOperaciones';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!CategoriaOperacionesForm.init)  {\n            CategoriaOperacionesForm.init = true;\n\n            var w0 = StringEditor;\n            var w1 = LookupEditor;\n\n            initFormType(CategoriaOperacionesForm, [\n                'LocalSap', w0,\n                'Region', w1,\n                'EdoLocal', w1,\n                'Zona', w1,\n                'Geo', w1,\n                'MailGeo', w0,\n                'DirectorRegional', w1,\n                'HorarioLv', w0,\n                'HorarioS', w0,\n                'HorarioDyF', w0\n            ]);\n        }\n    }\n}"],
  "mappings": "6DAAQ,IAAMA,EAAN,KAAkC,CAE1C,EAFcC,EAAAD,EAAA,+BAAAA,EACH,WAAa,mCCDvB,IAAAE,EAA4B,SAWtB,IAAeC,EAAf,KAAuC,CAU9C,EAVsBC,EAAAD,EAAA,2BAAAA,EACF,WAAa,SADXA,EAEF,aAAe,cAFbA,EAGF,gBAAkB,mCAHhBA,EAIF,iBAAmB,qBAJjBA,EAKF,iBAAmB,qBALjBA,EAMF,eAAiB,mBANfA,EAOF,iBAAmB,qBAPjBA,EASF,UAAS,eAAqC,ECpBjE,IAAAE,EAAuK,SAGvJC,OACAA,EAAA,QAAU,mCAQVA,EAAA,QAAU,CACnB,OAAQ,0CACR,OAAQ,0CACR,OAAQ,0CACR,SAAU,4CACV,KAAM,uCACV,EAEA,CACI,SACA,SACA,SACA,WACA,MACJ,EAAE,QAAQC,GAAK,CACLD,EAA6BC,CAAC,EAAI,SAAUC,EAAGC,EAAGC,EAAG,CACvD,SAAO,kBAAeJ,EAAA,QAAU,IAAMC,EAAGC,EAAGC,EAAGC,CAAC,CACpD,CACJ,CAAC,IA3BYJ,MAAA,KCHT,IAAMK,EAAN,KAAkC,CAE1C,EAFcC,EAAAD,EAAA,+BAAAA,EACH,WAAa,mCCDvB,IAAAE,EAA4B,SAetB,IAAeC,EAAf,KAAuC,CAU9C,EAVsBC,EAAAD,EAAA,2BAAAA,EACF,WAAa,WADXA,EAEF,aAAe,WAFbA,EAGF,gBAAkB,mCAHhBA,EAIF,iBAAmB,qBAJjBA,EAKF,iBAAmB,qBALjBA,EAMF,eAAiB,mBANfA,EAOF,iBAAmB,qBAPjBA,EASF,UAAS,eAAqC,ECxBjE,IAAAE,EAAuK,SAGvJC,OACAA,EAAA,QAAU,mCAQVA,EAAA,QAAU,CACnB,OAAQ,0CACR,OAAQ,0CACR,OAAQ,0CACR,SAAU,4CACV,KAAM,uCACV,EAEA,CACI,SACA,SACA,SACA,WACA,MACJ,EAAE,QAAQC,GAAK,CACLD,EAA6BC,CAAC,EAAI,SAAUC,EAAGC,EAAGC,EAAG,CACvD,SAAO,kBAAeJ,EAAA,QAAU,IAAMC,EAAGC,EAAGC,EAAGC,CAAC,CACpD,CACJ,CAAC,IA3BYJ,MAAA,KCHhB,IAAAK,EAA0F,SAC3FC,EAA6B,SAStB,IAAMC,EAAN,cAAuC,iBAAgB,CAI1D,YAAYC,EAAgB,CAGxB,GAFA,MAAMA,CAAM,EAER,CAACD,EAAyB,KAAO,CACjCA,EAAyB,KAAO,GAEhC,IAAIE,EAAK,eACLC,EAAK,gBACLC,EAAK,eACLC,EAAK,mBAET,gBAAaL,EAA0B,CACnC,iBAAkBE,EAClB,UAAWC,EACX,cAAeC,EACf,SAAUC,CACd,CAAC,CACL,CACJ,CACJ,EAvBaC,EAANN,EAAMO,EAAAD,EAAA,4BAAAA,EACF,QAAU,mCCXpB,IAAAE,EAA4D,SAC7DC,EAA6B,SAetB,IAAMC,EAAN,cAAuC,iBAAgB,CAI1D,YAAYC,EAAgB,CAGxB,GAFA,MAAMA,CAAM,EAER,CAACD,EAAyB,KAAO,CACjCA,EAAyB,KAAO,GAEhC,IAAIE,EAAK,eACLC,EAAK,kBAET,gBAAaH,EAA0B,CACnC,WAAYE,EACZ,SAAUC,EACV,WAAYA,EACZ,OAAQA,EACR,MAAOA,EACP,UAAWD,EACX,mBAAoBC,EACpB,YAAaD,EACb,WAAYA,EACZ,aAAcA,CAClB,CAAC,CACL,CACJ,CACJ,EA3BaE,EAANJ,EAAMK,EAAAD,EAAA,4BAAAA,EACF,QAAU",
  "names": ["CatalogosOperacionesColumns", "__name", "import_q", "CatalogosOperacionesRow", "__name", "import_q", "CatalogosOperacionesService", "x", "r", "s", "o", "CategoriaOperacionesColumns", "__name", "import_q", "CategoriaOperacionesRow", "__name", "import_q", "CategoriaOperacionesService", "x", "r", "s", "o", "import_corelib", "import_q", "_CatalogosOperacionesForm", "prefix", "w0", "w1", "w2", "w3", "CatalogosOperacionesForm", "__name", "import_corelib", "import_q", "_CategoriaOperacionesForm", "prefix", "w0", "w1", "CategoriaOperacionesForm", "__name"]
}
