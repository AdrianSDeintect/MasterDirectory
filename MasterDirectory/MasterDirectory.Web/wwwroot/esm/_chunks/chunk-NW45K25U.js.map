{
  "version": 3,
  "sources": ["../../../Modules/ServerTypes/Comerciales/CatalogosComercialesColumns.ts", "../../../Modules/ServerTypes/Comerciales/CatalogosComercialesRow.ts", "../../../Modules/ServerTypes/Comerciales/CatalogosComercialesService.ts", "../../../Modules/ServerTypes/Comerciales/CategoriaComercialesColumns.ts", "../../../Modules/ServerTypes/Comerciales/CategoriaComercialesRow.ts", "../../../Modules/ServerTypes/Comerciales/CategoriaComercialesService.ts", "../../../Modules/ServerTypes/Comerciales/CatalogosComercialesForm.ts", "../../../Modules/ServerTypes/Comerciales/CategoriaComercialesForm.ts"],
  "sourcesContent": ["\uFEFFexport class CatalogosComercialesColumns {\r\n    static columnsKey = 'Comerciales.CatalogosComerciales';\r\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib/q\";\n\nexport interface CatalogosComercialesRow {\n    IdCons?: number;\n    IdtipoCatalogo?: number;\n    IdClave?: number;\n    Descripcion?: string;\n    Activo?: number;\n    NombreTipoCatalogo?: string;\n}\n\nexport abstract class CatalogosComercialesRow {\n    static readonly idProperty = 'IdCons';\n    static readonly nameProperty = 'Descripcion';\n    static readonly localTextPrefix = 'Comerciales.CatalogosComerciales';\n    static readonly deletePermission = 'Comerciales:Delete';\n    static readonly insertPermission = 'Comerciales:Modify';\n    static readonly readPermission = 'Comerciales:View';\n    static readonly updatePermission = 'Comerciales:Modify';\n\n    static readonly Fields = fieldsProxy<CatalogosComercialesRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib/q\";\nimport { CatalogosComercialesRow } from \"./CatalogosComercialesRow\";\n\nexport namespace CatalogosComercialesService {\n    export const baseUrl = 'Comerciales/CatalogosComerciales';\n\n    export declare function Create(request: SaveRequest<CatalogosComercialesRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<CatalogosComercialesRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<CatalogosComercialesRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<CatalogosComercialesRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"Comerciales/CatalogosComerciales/Create\",\n        Update: \"Comerciales/CatalogosComerciales/Update\",\n        Delete: \"Comerciales/CatalogosComerciales/Delete\",\n        Retrieve: \"Comerciales/CatalogosComerciales/Retrieve\",\n        List: \"Comerciales/CatalogosComerciales/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>CatalogosComercialesService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFexport class CategoriaComercialesColumns {\r\n    static columnsKey = 'Comerciales.CategoriaComerciales';\r\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib/q\";\n\nexport interface CategoriaComercialesRow {\n    LocalSap?: string;\n    M2Pdv?: string;\n    M2Local?: string;\n    TotEspacioExhibFarm?: string;\n    TirasImpulso?: string;\n    Islas?: string;\n    ExhibMostrador?: string;\n    Hp1?: string;\n    Hp2?: string;\n    Hp3?: string;\n    MedidaCabecera?: string;\n    Cajonera?: string;\n    TramosCajonera?: string;\n    MuebleGenericos?: string;\n    RefriMostradorFarma?: string;\n    Refri4puertas?: string;\n    Tabaquera?: string;\n    TabletasFujiFilm?: string;\n    Kioscos?: string;\n    No7?: string;\n    SoapYGlory?: string;\n    TramosDermo?: string;\n    TempoFarma?: string;\n}\n\nexport abstract class CategoriaComercialesRow {\n    static readonly idProperty = 'LocalSap';\n    static readonly nameProperty = 'LocalSap';\n    static readonly localTextPrefix = 'Comerciales.CategoriaComerciales';\n    static readonly deletePermission = 'Comerciales:Delete';\n    static readonly insertPermission = 'Comerciales:Modify';\n    static readonly readPermission = 'Comerciales:View';\n    static readonly updatePermission = 'Comerciales:Modify';\n\n    static readonly Fields = fieldsProxy<CategoriaComercialesRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib/q\";\nimport { CategoriaComercialesRow } from \"./CategoriaComercialesRow\";\n\nexport namespace CategoriaComercialesService {\n    export const baseUrl = 'Comerciales/CategoriaComerciales';\n\n    export declare function Create(request: SaveRequest<CategoriaComercialesRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<CategoriaComercialesRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<CategoriaComercialesRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<CategoriaComercialesRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"Comerciales/CategoriaComerciales/Create\",\n        Update: \"Comerciales/CategoriaComerciales/Update\",\n        Delete: \"Comerciales/CategoriaComerciales/Delete\",\n        Retrieve: \"Comerciales/CategoriaComerciales/Retrieve\",\n        List: \"Comerciales/CategoriaComerciales/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>CategoriaComercialesService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFimport { LookupEditor, IntegerEditor, StringEditor, BooleanEditor, PrefixedContext } from \"@serenity-is/corelib\";\nimport { initFormType } from \"@serenity-is/corelib/q\";\n\nexport interface CatalogosComercialesForm {\n    IdtipoCatalogo: LookupEditor;\n    IdClave: IntegerEditor;\n    Descripcion: StringEditor;\n    Activo: BooleanEditor;\n}\n\nexport class CatalogosComercialesForm extends PrefixedContext {\n    static formKey = 'Comerciales.CatalogosComerciales';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!CatalogosComercialesForm.init)  {\n            CatalogosComercialesForm.init = true;\n\n            var w0 = LookupEditor;\n            var w1 = IntegerEditor;\n            var w2 = StringEditor;\n            var w3 = BooleanEditor;\n\n            initFormType(CatalogosComercialesForm, [\n                'IdtipoCatalogo', w0,\n                'IdClave', w1,\n                'Descripcion', w2,\n                'Activo', w3\n            ]);\n        }\n    }\n}", "\uFEFFimport { StringEditor, LookupEditor, PrefixedContext } from \"@serenity-is/corelib\";\nimport { initFormType } from \"@serenity-is/corelib/q\";\n\nexport interface CategoriaComercialesForm {\n    LocalSap: StringEditor;\n    TotEspacioExhibFarm: StringEditor;\n    TirasImpulso: StringEditor;\n    Hp1: StringEditor;\n    Hp2: StringEditor;\n    Hp3: StringEditor;\n    Tabaquera: StringEditor;\n    TabletasFujiFilm: StringEditor;\n    Kioscos: StringEditor;\n    No7: LookupEditor;\n    ExhibMostrador: StringEditor;\n    Islas: StringEditor;\n    M2Pdv: StringEditor;\n    M2Local: StringEditor;\n    MedidaCabecera: LookupEditor;\n    RefriMostradorFarma: LookupEditor;\n    Refri4puertas: LookupEditor;\n    Cajonera: StringEditor;\n    TramosCajonera: StringEditor;\n    MuebleGenericos: StringEditor;\n    SoapYGlory: LookupEditor;\n    TramosDermo: LookupEditor;\n    TempoFarma: LookupEditor;\n}\n\nexport class CategoriaComercialesForm extends PrefixedContext {\n    static formKey = 'Comerciales.CategoriaComerciales';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!CategoriaComercialesForm.init)  {\n            CategoriaComercialesForm.init = true;\n\n            var w0 = StringEditor;\n            var w1 = LookupEditor;\n\n            initFormType(CategoriaComercialesForm, [\n                'LocalSap', w0,\n                'TotEspacioExhibFarm', w0,\n                'TirasImpulso', w0,\n                'Hp1', w0,\n                'Hp2', w0,\n                'Hp3', w0,\n                'Tabaquera', w0,\n                'TabletasFujiFilm', w0,\n                'Kioscos', w0,\n                'No7', w1,\n                'ExhibMostrador', w0,\n                'Islas', w0,\n                'M2Pdv', w0,\n                'M2Local', w0,\n                'MedidaCabecera', w1,\n                'RefriMostradorFarma', w1,\n                'Refri4puertas', w1,\n                'Cajonera', w0,\n                'TramosCajonera', w0,\n                'MuebleGenericos', w0,\n                'SoapYGlory', w1,\n                'TramosDermo', w1,\n                'TempoFarma', w1\n            ]);\n        }\n    }\n}"],
  "mappings": "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",
  "names": ["CatalogosComercialesColumns", "__name", "import_q", "CatalogosComercialesRow", "__name", "import_q", "CatalogosComercialesService", "x", "r", "s", "o", "CategoriaComercialesColumns", "__name", "import_q", "CategoriaComercialesRow", "__name", "import_q", "CategoriaComercialesService", "x", "r", "s", "o", "import_corelib", "import_q", "_CatalogosComercialesForm", "prefix", "w0", "w1", "w2", "w3", "CatalogosComercialesForm", "__name", "import_corelib", "import_q", "_CategoriaComercialesForm", "prefix", "w0", "w1", "CategoriaComercialesForm", "__name"]
}
