{
  "version": 3,
  "sources": ["../../../Modules/ServerTypes/Digital/CatalogosDigitalColumns.ts", "../../../Modules/ServerTypes/Digital/CatalogosDigitalRow.ts", "../../../Modules/ServerTypes/Digital/CatalogosDigitalService.ts", "../../../Modules/ServerTypes/Digital/CategoriaDigitalColumns.ts", "../../../Modules/ServerTypes/Digital/CategoriaDigitalRow.ts", "../../../Modules/ServerTypes/Digital/CategoriaDigitalService.ts", "../../../Modules/ServerTypes/Digital/CatalogosDigitalForm.ts", "../../../Modules/ServerTypes/Digital/CategoriaDigitalForm.ts"],
  "sourcesContent": ["\uFEFFexport class CatalogosDigitalColumns {\r\n    static columnsKey = 'Digital.CatalogosDigital';\r\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib/q\";\n\nexport interface CatalogosDigitalRow {\n    IdCons?: number;\n    IdtipoCatalogo?: number;\n    IdClave?: number;\n    Descripcion?: string;\n    Activo?: number;\n    NombreTipoCatalogo?: string;\n}\n\nexport abstract class CatalogosDigitalRow {\n    static readonly idProperty = 'IdCons';\n    static readonly nameProperty = 'Descripcion';\n    static readonly localTextPrefix = 'Digital.CatalogosDigital';\n    static readonly deletePermission = 'Digital:Delete';\n    static readonly insertPermission = 'Digital:Modify';\n    static readonly readPermission = 'Digital:View';\n    static readonly updatePermission = 'Digital:Modify';\n\n    static readonly Fields = fieldsProxy<CatalogosDigitalRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib/q\";\nimport { CatalogosDigitalRow } from \"./CatalogosDigitalRow\";\n\nexport namespace CatalogosDigitalService {\n    export const baseUrl = 'Digital/CatalogosDigital';\n\n    export declare function Create(request: SaveRequest<CatalogosDigitalRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<CatalogosDigitalRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<CatalogosDigitalRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<CatalogosDigitalRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"Digital/CatalogosDigital/Create\",\n        Update: \"Digital/CatalogosDigital/Update\",\n        Delete: \"Digital/CatalogosDigital/Delete\",\n        Retrieve: \"Digital/CatalogosDigital/Retrieve\",\n        List: \"Digital/CatalogosDigital/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>CatalogosDigitalService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFexport class CategoriaDigitalColumns {\r\n    static columnsKey = 'Digital.CategoriaDigital';\r\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib/q\";\n\nexport interface CategoriaDigitalRow {\n    LocalSap?: string;\n    DirGoogle?: string;\n    Latitud?: string;\n    Longitud?: string;\n    LinkGoogleMaps?: string;\n}\n\nexport abstract class CategoriaDigitalRow {\n    static readonly idProperty = 'LocalSap';\n    static readonly nameProperty = 'LocalSap';\n    static readonly localTextPrefix = 'Digital.CategoriaDigital';\n    static readonly deletePermission = 'Digital:Delete';\n    static readonly insertPermission = 'Digital:Modify';\n    static readonly readPermission = 'Digital:View';\n    static readonly updatePermission = 'Digital:Modify';\n\n    static readonly Fields = fieldsProxy<CategoriaDigitalRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib/q\";\nimport { CategoriaDigitalRow } from \"./CategoriaDigitalRow\";\n\nexport namespace CategoriaDigitalService {\n    export const baseUrl = 'Digital/CategoriaDigital';\n\n    export declare function Create(request: SaveRequest<CategoriaDigitalRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<CategoriaDigitalRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<CategoriaDigitalRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<CategoriaDigitalRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"Digital/CategoriaDigital/Create\",\n        Update: \"Digital/CategoriaDigital/Update\",\n        Delete: \"Digital/CategoriaDigital/Delete\",\n        Retrieve: \"Digital/CategoriaDigital/Retrieve\",\n        List: \"Digital/CategoriaDigital/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>CategoriaDigitalService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFimport { LookupEditor, IntegerEditor, StringEditor, BooleanEditor, PrefixedContext } from \"@serenity-is/corelib\";\nimport { initFormType } from \"@serenity-is/corelib/q\";\n\nexport interface CatalogosDigitalForm {\n    IdtipoCatalogo: LookupEditor;\n    IdClave: IntegerEditor;\n    Descripcion: StringEditor;\n    Activo: BooleanEditor;\n}\n\nexport class CatalogosDigitalForm extends PrefixedContext {\n    static formKey = 'Digital.CatalogosDigital';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!CatalogosDigitalForm.init)  {\n            CatalogosDigitalForm.init = true;\n\n            var w0 = LookupEditor;\n            var w1 = IntegerEditor;\n            var w2 = StringEditor;\n            var w3 = BooleanEditor;\n\n            initFormType(CatalogosDigitalForm, [\n                'IdtipoCatalogo', w0,\n                'IdClave', w1,\n                'Descripcion', w2,\n                'Activo', w3\n            ]);\n        }\n    }\n}", "\uFEFFimport { StringEditor, PrefixedContext } from \"@serenity-is/corelib\";\nimport { initFormType } from \"@serenity-is/corelib/q\";\n\nexport interface CategoriaDigitalForm {\n    LocalSap: StringEditor;\n    DirGoogle: StringEditor;\n    Latitud: StringEditor;\n    Longitud: StringEditor;\n    LinkGoogleMaps: StringEditor;\n}\n\nexport class CategoriaDigitalForm extends PrefixedContext {\n    static formKey = 'Digital.CategoriaDigital';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!CategoriaDigitalForm.init)  {\n            CategoriaDigitalForm.init = true;\n\n            var w0 = StringEditor;\n\n            initFormType(CategoriaDigitalForm, [\n                'LocalSap', w0,\n                'DirGoogle', w0,\n                'Latitud', w0,\n                'Longitud', w0,\n                'LinkGoogleMaps', w0\n            ]);\n        }\n    }\n}"],
  "mappings": "6DAAQ,IAAMA,EAAN,KAA8B,CAEtC,EAFcC,EAAAD,EAAA,2BAAAA,EACH,WAAa,2BCDvB,IAAAE,EAA4B,SAWtB,IAAeC,EAAf,KAAmC,CAU1C,EAVsBC,EAAAD,EAAA,uBAAAA,EACF,WAAa,SADXA,EAEF,aAAe,cAFbA,EAGF,gBAAkB,2BAHhBA,EAIF,iBAAmB,iBAJjBA,EAKF,iBAAmB,iBALjBA,EAMF,eAAiB,eANfA,EAOF,iBAAmB,iBAPjBA,EASF,UAAS,eAAiC,ECpB7D,IAAAE,EAAuK,SAGvJC,OACAA,EAAA,QAAU,2BAQVA,EAAA,QAAU,CACnB,OAAQ,kCACR,OAAQ,kCACR,OAAQ,kCACR,SAAU,oCACV,KAAM,+BACV,EAEA,CACI,SACA,SACA,SACA,WACA,MACJ,EAAE,QAAQC,GAAK,CACLD,EAAyBC,CAAC,EAAI,SAAUC,EAAGC,EAAGC,EAAG,CACnD,SAAO,kBAAeJ,EAAA,QAAU,IAAMC,EAAGC,EAAGC,EAAGC,CAAC,CACpD,CACJ,CAAC,IA3BYJ,MAAA,KCHT,IAAMK,EAAN,KAA8B,CAEtC,EAFcC,EAAAD,EAAA,2BAAAA,EACH,WAAa,2BCDvB,IAAAE,EAA4B,SAUtB,IAAeC,EAAf,KAAmC,CAU1C,EAVsBC,EAAAD,EAAA,uBAAAA,EACF,WAAa,WADXA,EAEF,aAAe,WAFbA,EAGF,gBAAkB,2BAHhBA,EAIF,iBAAmB,iBAJjBA,EAKF,iBAAmB,iBALjBA,EAMF,eAAiB,eANfA,EAOF,iBAAmB,iBAPjBA,EASF,UAAS,eAAiC,ECnB7D,IAAAE,EAAuK,SAGvJC,OACAA,EAAA,QAAU,2BAQVA,EAAA,QAAU,CACnB,OAAQ,kCACR,OAAQ,kCACR,OAAQ,kCACR,SAAU,oCACV,KAAM,+BACV,EAEA,CACI,SACA,SACA,SACA,WACA,MACJ,EAAE,QAAQC,GAAK,CACLD,EAAyBC,CAAC,EAAI,SAAUC,EAAGC,EAAGC,EAAG,CACnD,SAAO,kBAAeJ,EAAA,QAAU,IAAMC,EAAGC,EAAGC,EAAGC,CAAC,CACpD,CACJ,CAAC,IA3BYJ,MAAA,KCHhB,IAAAK,EAA0F,SAC3FC,EAA6B,SAStB,IAAMC,EAAN,cAAmC,iBAAgB,CAItD,YAAYC,EAAgB,CAGxB,GAFA,MAAMA,CAAM,EAER,CAACD,EAAqB,KAAO,CAC7BA,EAAqB,KAAO,GAE5B,IAAIE,EAAK,eACLC,EAAK,gBACLC,EAAK,eACLC,EAAK,mBAET,gBAAaL,EAAsB,CAC/B,iBAAkBE,EAClB,UAAWC,EACX,cAAeC,EACf,SAAUC,CACd,CAAC,CACL,CACJ,CACJ,EAvBaC,EAANN,EAAMO,EAAAD,EAAA,wBAAAA,EACF,QAAU,2BCXpB,IAAAE,EAA8C,SAC/CC,EAA6B,SAUtB,IAAMC,EAAN,cAAmC,iBAAgB,CAItD,YAAYC,EAAgB,CAGxB,GAFA,MAAMA,CAAM,EAER,CAACD,EAAqB,KAAO,CAC7BA,EAAqB,KAAO,GAE5B,IAAIE,EAAK,kBAET,gBAAaF,EAAsB,CAC/B,WAAYE,EACZ,YAAaA,EACb,UAAWA,EACX,WAAYA,EACZ,iBAAkBA,CACtB,CAAC,CACL,CACJ,CACJ,EArBaC,EAANH,EAAMI,EAAAD,EAAA,wBAAAA,EACF,QAAU",
  "names": ["CatalogosDigitalColumns", "__name", "import_q", "CatalogosDigitalRow", "__name", "import_q", "CatalogosDigitalService", "x", "r", "s", "o", "CategoriaDigitalColumns", "__name", "import_q", "CategoriaDigitalRow", "__name", "import_q", "CategoriaDigitalService", "x", "r", "s", "o", "import_corelib", "import_q", "_CatalogosDigitalForm", "prefix", "w0", "w1", "w2", "w3", "CatalogosDigitalForm", "__name", "import_corelib", "import_q", "_CategoriaDigitalForm", "prefix", "w0", "CategoriaDigitalForm", "__name"]
}
