{
  "version": 3,
  "sources": ["../../../Modules/ServerTypes/Tesoreria/CatalogosTesoreriaColumns.ts", "../../../Modules/ServerTypes/Tesoreria/CatalogosTesoreriaRow.ts", "../../../Modules/ServerTypes/Tesoreria/CatalogosTesoreriaService.ts", "../../../Modules/ServerTypes/Tesoreria/CategoriaTesoreriaColumns.ts", "../../../Modules/ServerTypes/Tesoreria/CategoriaTesoreriaRow.ts", "../../../Modules/ServerTypes/Tesoreria/CategoriaTesoreriaService.ts", "../../../Modules/ServerTypes/Tesoreria/CatalogosTesoreriaForm.ts", "../../../Modules/ServerTypes/Tesoreria/CategoriaTesoreriaForm.ts"],
  "sourcesContent": ["\uFEFFexport class CatalogosTesoreriaColumns {\r\n    static columnsKey = 'Tesoreria.CatalogosTesoreria';\r\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib/q\";\n\nexport interface CatalogosTesoreriaRow {\n    IdCons?: number;\n    IdtipoCatalogo?: number;\n    IdClave?: number;\n    Descripcion?: string;\n    Activo?: number;\n    NombreTipoCatalogo?: string;\n}\n\nexport abstract class CatalogosTesoreriaRow {\n    static readonly idProperty = 'IdCons';\n    static readonly nameProperty = 'Descripcion';\n    static readonly localTextPrefix = 'Tesoreria.CatalogosTesoreria';\n    static readonly deletePermission = 'Tesoreria:Delete';\n    static readonly insertPermission = 'Tesoreria:Modify';\n    static readonly readPermission = 'Tesoreria:View';\n    static readonly updatePermission = 'Tesoreria:Modify';\n\n    static readonly Fields = fieldsProxy<CatalogosTesoreriaRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib/q\";\nimport { CatalogosTesoreriaRow } from \"./CatalogosTesoreriaRow\";\n\nexport namespace CatalogosTesoreriaService {\n    export const baseUrl = 'Tesoreria/CatalogosTesoreria';\n\n    export declare function Create(request: SaveRequest<CatalogosTesoreriaRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<CatalogosTesoreriaRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<CatalogosTesoreriaRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<CatalogosTesoreriaRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"Tesoreria/CatalogosTesoreria/Create\",\n        Update: \"Tesoreria/CatalogosTesoreria/Update\",\n        Delete: \"Tesoreria/CatalogosTesoreria/Delete\",\n        Retrieve: \"Tesoreria/CatalogosTesoreria/Retrieve\",\n        List: \"Tesoreria/CatalogosTesoreria/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>CatalogosTesoreriaService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFexport class CategoriaTesoreriaColumns {\r\n    static columnsKey = 'Tesoreria.CategoriaTesoreria';\r\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib/q\";\n\nexport interface CategoriaTesoreriaRow {\n    LocalSap?: string;\n    Cajero?: string;\n}\n\nexport abstract class CategoriaTesoreriaRow {\n    static readonly idProperty = 'LocalSap';\n    static readonly nameProperty = 'LocalSap';\n    static readonly localTextPrefix = 'Tesoreria.CategoriaTesoreria';\n    static readonly deletePermission = 'Tesoreria:Delete';\n    static readonly insertPermission = 'Tesoreria:Modify';\n    static readonly readPermission = 'Tesoreria:View';\n    static readonly updatePermission = 'Tesoreria:Modify';\n\n    static readonly Fields = fieldsProxy<CategoriaTesoreriaRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib/q\";\nimport { CategoriaTesoreriaRow } from \"./CategoriaTesoreriaRow\";\n\nexport namespace CategoriaTesoreriaService {\n    export const baseUrl = 'Tesoreria/CategoriaTesoreria';\n\n    export declare function Create(request: SaveRequest<CategoriaTesoreriaRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<CategoriaTesoreriaRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<CategoriaTesoreriaRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<CategoriaTesoreriaRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"Tesoreria/CategoriaTesoreria/Create\",\n        Update: \"Tesoreria/CategoriaTesoreria/Update\",\n        Delete: \"Tesoreria/CategoriaTesoreria/Delete\",\n        Retrieve: \"Tesoreria/CategoriaTesoreria/Retrieve\",\n        List: \"Tesoreria/CategoriaTesoreria/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>CategoriaTesoreriaService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFimport { LookupEditor, IntegerEditor, StringEditor, BooleanEditor, PrefixedContext } from \"@serenity-is/corelib\";\nimport { initFormType } from \"@serenity-is/corelib/q\";\n\nexport interface CatalogosTesoreriaForm {\n    IdtipoCatalogo: LookupEditor;\n    IdClave: IntegerEditor;\n    Descripcion: StringEditor;\n    Activo: BooleanEditor;\n}\n\nexport class CatalogosTesoreriaForm extends PrefixedContext {\n    static formKey = 'Tesoreria.CatalogosTesoreria';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!CatalogosTesoreriaForm.init)  {\n            CatalogosTesoreriaForm.init = true;\n\n            var w0 = LookupEditor;\n            var w1 = IntegerEditor;\n            var w2 = StringEditor;\n            var w3 = BooleanEditor;\n\n            initFormType(CatalogosTesoreriaForm, [\n                'IdtipoCatalogo', w0,\n                'IdClave', w1,\n                'Descripcion', w2,\n                'Activo', w3\n            ]);\n        }\n    }\n}", "\uFEFFimport { StringEditor, LookupEditor, PrefixedContext } from \"@serenity-is/corelib\";\nimport { initFormType } from \"@serenity-is/corelib/q\";\n\nexport interface CategoriaTesoreriaForm {\n    LocalSap: StringEditor;\n    Cajero: LookupEditor;\n}\n\nexport class CategoriaTesoreriaForm extends PrefixedContext {\n    static formKey = 'Tesoreria.CategoriaTesoreria';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!CategoriaTesoreriaForm.init)  {\n            CategoriaTesoreriaForm.init = true;\n\n            var w0 = StringEditor;\n            var w1 = LookupEditor;\n\n            initFormType(CategoriaTesoreriaForm, [\n                'LocalSap', w0,\n                'Cajero', w1\n            ]);\n        }\n    }\n}"],
  "mappings": "6DAAQ,IAAMA,EAAN,KAAgC,CAExC,EAFcC,EAAAD,EAAA,6BAAAA,EACH,WAAa,+BCDvB,IAAAE,EAA4B,SAWtB,IAAeC,EAAf,KAAqC,CAU5C,EAVsBC,EAAAD,EAAA,yBAAAA,EACF,WAAa,SADXA,EAEF,aAAe,cAFbA,EAGF,gBAAkB,+BAHhBA,EAIF,iBAAmB,mBAJjBA,EAKF,iBAAmB,mBALjBA,EAMF,eAAiB,iBANfA,EAOF,iBAAmB,mBAPjBA,EASF,UAAS,eAAmC,ECpB/D,IAAAE,EAAuK,SAGvJC,OACAA,EAAA,QAAU,+BAQVA,EAAA,QAAU,CACnB,OAAQ,sCACR,OAAQ,sCACR,OAAQ,sCACR,SAAU,wCACV,KAAM,mCACV,EAEA,CACI,SACA,SACA,SACA,WACA,MACJ,EAAE,QAAQC,GAAK,CACLD,EAA2BC,CAAC,EAAI,SAAUC,EAAGC,EAAGC,EAAG,CACrD,SAAO,kBAAeJ,EAAA,QAAU,IAAMC,EAAGC,EAAGC,EAAGC,CAAC,CACpD,CACJ,CAAC,IA3BYJ,MAAA,KCHT,IAAMK,EAAN,KAAgC,CAExC,EAFcC,EAAAD,EAAA,6BAAAA,EACH,WAAa,+BCDvB,IAAAE,EAA4B,SAOtB,IAAeC,EAAf,KAAqC,CAU5C,EAVsBC,EAAAD,EAAA,yBAAAA,EACF,WAAa,WADXA,EAEF,aAAe,WAFbA,EAGF,gBAAkB,+BAHhBA,EAIF,iBAAmB,mBAJjBA,EAKF,iBAAmB,mBALjBA,EAMF,eAAiB,iBANfA,EAOF,iBAAmB,mBAPjBA,EASF,UAAS,eAAmC,EChB/D,IAAAE,EAAuK,SAGvJC,OACAA,EAAA,QAAU,+BAQVA,EAAA,QAAU,CACnB,OAAQ,sCACR,OAAQ,sCACR,OAAQ,sCACR,SAAU,wCACV,KAAM,mCACV,EAEA,CACI,SACA,SACA,SACA,WACA,MACJ,EAAE,QAAQC,GAAK,CACLD,EAA2BC,CAAC,EAAI,SAAUC,EAAGC,EAAGC,EAAG,CACrD,SAAO,kBAAeJ,EAAA,QAAU,IAAMC,EAAGC,EAAGC,EAAGC,CAAC,CACpD,CACJ,CAAC,IA3BYJ,MAAA,KCHhB,IAAAK,EAA0F,SAC3FC,EAA6B,SAStB,IAAMC,EAAN,cAAqC,iBAAgB,CAIxD,YAAYC,EAAgB,CAGxB,GAFA,MAAMA,CAAM,EAER,CAACD,EAAuB,KAAO,CAC/BA,EAAuB,KAAO,GAE9B,IAAIE,EAAK,eACLC,EAAK,gBACLC,EAAK,eACLC,EAAK,mBAET,gBAAaL,EAAwB,CACjC,iBAAkBE,EAClB,UAAWC,EACX,cAAeC,EACf,SAAUC,CACd,CAAC,CACL,CACJ,CACJ,EAvBaC,EAANN,EAAMO,EAAAD,EAAA,0BAAAA,EACF,QAAU,+BCXpB,IAAAE,EAA4D,SAC7DC,EAA6B,SAOtB,IAAMC,EAAN,cAAqC,iBAAgB,CAIxD,YAAYC,EAAgB,CAGxB,GAFA,MAAMA,CAAM,EAER,CAACD,EAAuB,KAAO,CAC/BA,EAAuB,KAAO,GAE9B,IAAIE,EAAK,eACLC,EAAK,kBAET,gBAAaH,EAAwB,CACjC,WAAYE,EACZ,SAAUC,CACd,CAAC,CACL,CACJ,CACJ,EAnBaC,EAANJ,EAAMK,EAAAD,EAAA,0BAAAA,EACF,QAAU",
  "names": ["CatalogosTesoreriaColumns", "__name", "import_q", "CatalogosTesoreriaRow", "__name", "import_q", "CatalogosTesoreriaService", "x", "r", "s", "o", "CategoriaTesoreriaColumns", "__name", "import_q", "CategoriaTesoreriaRow", "__name", "import_q", "CategoriaTesoreriaService", "x", "r", "s", "o", "import_corelib", "import_q", "_CatalogosTesoreriaForm", "prefix", "w0", "w1", "w2", "w3", "CatalogosTesoreriaForm", "__name", "import_corelib", "import_q", "_CategoriaTesoreriaForm", "prefix", "w0", "w1", "CategoriaTesoreriaForm", "__name"]
}
