{
  "version": 3,
  "sources": ["../../../Modules/ServerTypes/Inmobiliaria/CatalogosInmobiliariaColumns.ts", "../../../Modules/ServerTypes/Inmobiliaria/CatalogosInmobiliariaRow.ts", "../../../Modules/ServerTypes/Inmobiliaria/CatalogosInmobiliariaService.ts", "../../../Modules/ServerTypes/Inmobiliaria/CategoriaInmobiliariaColumns.ts", "../../../Modules/ServerTypes/Inmobiliaria/CategoriaInmobiliariaRow.ts", "../../../Modules/ServerTypes/Inmobiliaria/CategoriaInmobiliariaService.ts", "../../../Modules/ServerTypes/Inmobiliaria/CatalogosInmobiliariaForm.ts", "../../../Modules/ServerTypes/Inmobiliaria/CategoriaInmobiliariaForm.ts"],
  "sourcesContent": ["\uFEFFexport class CatalogosInmobiliariaColumns {\r\n    static columnsKey = 'Inmobiliaria.CatalogosInmobiliaria';\r\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib/q\";\n\nexport interface CatalogosInmobiliariaRow {\n    IdCons?: number;\n    IdtipoCatalogo?: number;\n    IdClave?: number;\n    Descripcion?: string;\n    Activo?: number;\n    NombreTipoCatalogo?: string;\n}\n\nexport abstract class CatalogosInmobiliariaRow {\n    static readonly idProperty = 'IdCons';\n    static readonly nameProperty = 'Descripcion';\n    static readonly localTextPrefix = 'Inmobiliaria.CatalogosInmobiliaria';\n    static readonly deletePermission = 'Inmobiliaria:Delete';\n    static readonly insertPermission = 'Inmobiliaria:Modify';\n    static readonly readPermission = 'Inmobiliaria:View';\n    static readonly updatePermission = 'Inmobiliaria:Modify';\n\n    static readonly Fields = fieldsProxy<CatalogosInmobiliariaRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib/q\";\nimport { CatalogosInmobiliariaRow } from \"./CatalogosInmobiliariaRow\";\n\nexport namespace CatalogosInmobiliariaService {\n    export const baseUrl = 'Inmobiliaria/CatalogosInmobiliaria';\n\n    export declare function Create(request: SaveRequest<CatalogosInmobiliariaRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<CatalogosInmobiliariaRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<CatalogosInmobiliariaRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<CatalogosInmobiliariaRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"Inmobiliaria/CatalogosInmobiliaria/Create\",\n        Update: \"Inmobiliaria/CatalogosInmobiliaria/Update\",\n        Delete: \"Inmobiliaria/CatalogosInmobiliaria/Delete\",\n        Retrieve: \"Inmobiliaria/CatalogosInmobiliaria/Retrieve\",\n        List: \"Inmobiliaria/CatalogosInmobiliaria/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>CatalogosInmobiliariaService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFexport class CategoriaInmobiliariaColumns {\r\n    static columnsKey = 'Inmobiliaria.CategoriaInmobiliaria';\r\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib/q\";\n\nexport interface CategoriaInmobiliariaRow {\n    LocalSap?: string;\n    Farmacia?: string;\n    Colonia?: string;\n    FechaApertura?: string;\n    Accesos?: string;\n    Ubicacion?: string;\n}\n\nexport abstract class CategoriaInmobiliariaRow {\n    static readonly idProperty = 'LocalSap';\n    static readonly nameProperty = 'LocalSap';\n    static readonly localTextPrefix = 'Inmobiliaria.CategoriaInmobiliaria';\n    static readonly deletePermission = 'Inmobiliaria:Delete';\n    static readonly insertPermission = 'Inmobiliaria:Modify';\n    static readonly readPermission = 'Inmobiliaria:View';\n    static readonly updatePermission = 'Inmobiliaria:Modify';\n\n    static readonly Fields = fieldsProxy<CategoriaInmobiliariaRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib/q\";\nimport { CategoriaInmobiliariaRow } from \"./CategoriaInmobiliariaRow\";\n\nexport namespace CategoriaInmobiliariaService {\n    export const baseUrl = 'Inmobiliaria/CategoriaInmobiliaria';\n\n    export declare function Create(request: SaveRequest<CategoriaInmobiliariaRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<CategoriaInmobiliariaRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<CategoriaInmobiliariaRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<CategoriaInmobiliariaRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"Inmobiliaria/CategoriaInmobiliaria/Create\",\n        Update: \"Inmobiliaria/CategoriaInmobiliaria/Update\",\n        Delete: \"Inmobiliaria/CategoriaInmobiliaria/Delete\",\n        Retrieve: \"Inmobiliaria/CategoriaInmobiliaria/Retrieve\",\n        List: \"Inmobiliaria/CategoriaInmobiliaria/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>CategoriaInmobiliariaService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFimport { LookupEditor, IntegerEditor, StringEditor, BooleanEditor, PrefixedContext } from \"@serenity-is/corelib\";\nimport { initFormType } from \"@serenity-is/corelib/q\";\n\nexport interface CatalogosInmobiliariaForm {\n    IdtipoCatalogo: LookupEditor;\n    IdClave: IntegerEditor;\n    Descripcion: StringEditor;\n    Activo: BooleanEditor;\n}\n\nexport class CatalogosInmobiliariaForm extends PrefixedContext {\n    static formKey = 'Inmobiliaria.CatalogosInmobiliaria';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!CatalogosInmobiliariaForm.init)  {\n            CatalogosInmobiliariaForm.init = true;\n\n            var w0 = LookupEditor;\n            var w1 = IntegerEditor;\n            var w2 = StringEditor;\n            var w3 = BooleanEditor;\n\n            initFormType(CatalogosInmobiliariaForm, [\n                'IdtipoCatalogo', w0,\n                'IdClave', w1,\n                'Descripcion', w2,\n                'Activo', w3\n            ]);\n        }\n    }\n}", "\uFEFFimport { StringEditor, DateEditor, LookupEditor, PrefixedContext } from \"@serenity-is/corelib\";\nimport { initFormType } from \"@serenity-is/corelib/q\";\n\nexport interface CategoriaInmobiliariaForm {\n    LocalSap: StringEditor;\n    Farmacia: StringEditor;\n    FechaApertura: DateEditor;\n    Colonia: StringEditor;\n    Accesos: LookupEditor;\n    Ubicacion: LookupEditor;\n}\n\nexport class CategoriaInmobiliariaForm extends PrefixedContext {\n    static formKey = 'Inmobiliaria.CategoriaInmobiliaria';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!CategoriaInmobiliariaForm.init)  {\n            CategoriaInmobiliariaForm.init = true;\n\n            var w0 = StringEditor;\n            var w1 = DateEditor;\n            var w2 = LookupEditor;\n\n            initFormType(CategoriaInmobiliariaForm, [\n                'LocalSap', w0,\n                'Farmacia', w0,\n                'FechaApertura', w1,\n                'Colonia', w0,\n                'Accesos', w2,\n                'Ubicacion', w2\n            ]);\n        }\n    }\n}"],
  "mappings": "6DAAQ,IAAMA,EAAN,KAAmC,CAE3C,EAFcC,EAAAD,EAAA,gCAAAA,EACH,WAAa,qCCDvB,IAAAE,EAA4B,SAWtB,IAAeC,EAAf,KAAwC,CAU/C,EAVsBC,EAAAD,EAAA,4BAAAA,EACF,WAAa,SADXA,EAEF,aAAe,cAFbA,EAGF,gBAAkB,qCAHhBA,EAIF,iBAAmB,sBAJjBA,EAKF,iBAAmB,sBALjBA,EAMF,eAAiB,oBANfA,EAOF,iBAAmB,sBAPjBA,EASF,UAAS,eAAsC,ECpBlE,IAAAE,EAAuK,SAGvJC,OACAA,EAAA,QAAU,qCAQVA,EAAA,QAAU,CACnB,OAAQ,4CACR,OAAQ,4CACR,OAAQ,4CACR,SAAU,8CACV,KAAM,yCACV,EAEA,CACI,SACA,SACA,SACA,WACA,MACJ,EAAE,QAAQC,GAAK,CACLD,EAA8BC,CAAC,EAAI,SAAUC,EAAGC,EAAGC,EAAG,CACxD,SAAO,kBAAeJ,EAAA,QAAU,IAAMC,EAAGC,EAAGC,EAAGC,CAAC,CACpD,CACJ,CAAC,IA3BYJ,MAAA,KCHT,IAAMK,EAAN,KAAmC,CAE3C,EAFcC,EAAAD,EAAA,gCAAAA,EACH,WAAa,qCCDvB,IAAAE,EAA4B,SAWtB,IAAeC,EAAf,KAAwC,CAU/C,EAVsBC,EAAAD,EAAA,4BAAAA,EACF,WAAa,WADXA,EAEF,aAAe,WAFbA,EAGF,gBAAkB,qCAHhBA,EAIF,iBAAmB,sBAJjBA,EAKF,iBAAmB,sBALjBA,EAMF,eAAiB,oBANfA,EAOF,iBAAmB,sBAPjBA,EASF,UAAS,eAAsC,ECpBlE,IAAAE,EAAuK,SAGvJC,OACAA,EAAA,QAAU,qCAQVA,EAAA,QAAU,CACnB,OAAQ,4CACR,OAAQ,4CACR,OAAQ,4CACR,SAAU,8CACV,KAAM,yCACV,EAEA,CACI,SACA,SACA,SACA,WACA,MACJ,EAAE,QAAQC,GAAK,CACLD,EAA8BC,CAAC,EAAI,SAAUC,EAAGC,EAAGC,EAAG,CACxD,SAAO,kBAAeJ,EAAA,QAAU,IAAMC,EAAGC,EAAGC,EAAGC,CAAC,CACpD,CACJ,CAAC,IA3BYJ,MAAA,KCHhB,IAAAK,EAA0F,SAC3FC,EAA6B,SAStB,IAAMC,EAAN,cAAwC,iBAAgB,CAI3D,YAAYC,EAAgB,CAGxB,GAFA,MAAMA,CAAM,EAER,CAACD,EAA0B,KAAO,CAClCA,EAA0B,KAAO,GAEjC,IAAIE,EAAK,eACLC,EAAK,gBACLC,EAAK,eACLC,EAAK,mBAET,gBAAaL,EAA2B,CACpC,iBAAkBE,EAClB,UAAWC,EACX,cAAeC,EACf,SAAUC,CACd,CAAC,CACL,CACJ,CACJ,EAvBaC,EAANN,EAAMO,EAAAD,EAAA,6BAAAA,EACF,QAAU,qCCXpB,IAAAE,EAAwE,SACzEC,EAA6B,SAWtB,IAAMC,EAAN,cAAwC,iBAAgB,CAI3D,YAAYC,EAAgB,CAGxB,GAFA,MAAMA,CAAM,EAER,CAACD,EAA0B,KAAO,CAClCA,EAA0B,KAAO,GAEjC,IAAIE,EAAK,eACLC,EAAK,aACLC,EAAK,kBAET,gBAAaJ,EAA2B,CACpC,WAAYE,EACZ,WAAYA,EACZ,gBAAiBC,EACjB,UAAWD,EACX,UAAWE,EACX,YAAaA,CACjB,CAAC,CACL,CACJ,CACJ,EAxBaC,EAANL,EAAMM,EAAAD,EAAA,6BAAAA,EACF,QAAU",
  "names": ["CatalogosInmobiliariaColumns", "__name", "import_q", "CatalogosInmobiliariaRow", "__name", "import_q", "CatalogosInmobiliariaService", "x", "r", "s", "o", "CategoriaInmobiliariaColumns", "__name", "import_q", "CategoriaInmobiliariaRow", "__name", "import_q", "CategoriaInmobiliariaService", "x", "r", "s", "o", "import_corelib", "import_q", "_CatalogosInmobiliariaForm", "prefix", "w0", "w1", "w2", "w3", "CatalogosInmobiliariaForm", "__name", "import_corelib", "import_q", "_CategoriaInmobiliariaForm", "prefix", "w0", "w1", "w2", "CategoriaInmobiliariaForm", "__name"]
}
