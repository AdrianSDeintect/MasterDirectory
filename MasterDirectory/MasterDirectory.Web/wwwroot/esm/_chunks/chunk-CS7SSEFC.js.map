{
  "version": 3,
  "sources": ["../../../Modules/ServerTypes/Expansion/CatalogosExpansionColumns.ts", "../../../Modules/ServerTypes/Expansion/CatalogosExpansionRow.ts", "../../../Modules/ServerTypes/Expansion/CatalogosExpansionService.ts", "../../../Modules/ServerTypes/Expansion/CategoriaExpansionColumns.ts", "../../../Modules/ServerTypes/Expansion/CategoriaExpansionRow.ts", "../../../Modules/ServerTypes/Expansion/CategoriaExpansionService.ts", "../../../Modules/ServerTypes/Expansion/CatalogosExpansionForm.ts", "../../../Modules/ServerTypes/Expansion/CategoriaExpansionForm.ts"],
  "sourcesContent": ["\uFEFFexport class CatalogosExpansionColumns {\r\n    static columnsKey = 'Expansion.CatalogosExpansion';\r\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib/q\";\n\nexport interface CatalogosExpansionRow {\n    IdCons?: number;\n    IdtipoCatalogo?: number;\n    IdClave?: number;\n    Descripcion?: string;\n    Activo?: number;\n    NombreTipoCatalogo?: string;\n}\n\nexport abstract class CatalogosExpansionRow {\n    static readonly idProperty = 'IdCons';\n    static readonly nameProperty = 'Descripcion';\n    static readonly localTextPrefix = 'Expansion.CatalogosExpansion';\n    static readonly deletePermission = 'Expansion:Delete';\n    static readonly insertPermission = 'Expansion:Modify';\n    static readonly readPermission = 'Expansion:View';\n    static readonly updatePermission = 'Expansion:Modify';\n\n    static readonly Fields = fieldsProxy<CatalogosExpansionRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib/q\";\nimport { CatalogosExpansionRow } from \"./CatalogosExpansionRow\";\n\nexport namespace CatalogosExpansionService {\n    export const baseUrl = 'Expansion/CatalogosExpansion';\n\n    export declare function Create(request: SaveRequest<CatalogosExpansionRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<CatalogosExpansionRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<CatalogosExpansionRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<CatalogosExpansionRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"Expansion/CatalogosExpansion/Create\",\n        Update: \"Expansion/CatalogosExpansion/Update\",\n        Delete: \"Expansion/CatalogosExpansion/Delete\",\n        Retrieve: \"Expansion/CatalogosExpansion/Retrieve\",\n        List: \"Expansion/CatalogosExpansion/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>CatalogosExpansionService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFexport class CategoriaExpansionColumns {\r\n    static columnsKey = 'Expansion.CategoriaExpansion';\r\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib/q\";\n\nexport interface CategoriaExpansionRow {\n    LocalSap?: string;\n    LocationType?: string;\n    Reapertura?: string;\n    Comsuc?: string;\n    TipoEstaciona?: string;\n    NCajonesEstaciona?: string;\n    Ciudad?: string;\n    Estado?: string;\n    Direccion?: string;\n    NExterior?: string;\n    Colonia?: string;\n    Cp?: string;\n    Latitud?: string;\n    Longuitud?: string;\n    FormatoFarmAlcance?: string;\n    Pantallas?: string;\n    ProvMobiliario?: string;\n    ColorMob?: string;\n    Dermo?: string;\n    Farmacia?: string;\n    FechaApertura?: string;\n}\n\nexport abstract class CategoriaExpansionRow {\n    static readonly idProperty = 'LocalSap';\n    static readonly nameProperty = 'LocalSap';\n    static readonly localTextPrefix = 'Expansion.CategoriaExpansion';\n    static readonly deletePermission = 'Expansion:Delete';\n    static readonly insertPermission = 'Expansion:Modify';\n    static readonly readPermission = 'Expansion:View';\n    static readonly updatePermission = 'Expansion:Modify';\n\n    static readonly Fields = fieldsProxy<CategoriaExpansionRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib/q\";\nimport { CategoriaExpansionRow } from \"./CategoriaExpansionRow\";\nimport { ExcelImportRequest, ExcelImportResponse } from \"@serenity-is/extensions\";\n\nexport namespace CategoriaExpansionService {\n    export const baseUrl = 'Expansion/CategoriaExpansion';\n\n    export declare function Create(request: SaveRequest<CategoriaExpansionRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<CategoriaExpansionRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<CategoriaExpansionRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<CategoriaExpansionRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function ExcelImport(request: ExcelImportRequest, onSuccess?: (response: ExcelImportResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"Expansion/CategoriaExpansion/Create\",\n        Update: \"Expansion/CategoriaExpansion/Update\",\n        Delete: \"Expansion/CategoriaExpansion/Delete\",\n        Retrieve: \"Expansion/CategoriaExpansion/Retrieve\",\n        List: \"Expansion/CategoriaExpansion/List\",\n        ExcelImport: \"Expansion/CategoriaExpansion/ExcelImport\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List', \n        'ExcelImport'\n    ].forEach(x => {\n        (<any>CategoriaExpansionService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFimport { LookupEditor, IntegerEditor, StringEditor, BooleanEditor, PrefixedContext } from \"@serenity-is/corelib\";\nimport { initFormType } from \"@serenity-is/corelib/q\";\n\nexport interface CatalogosExpansionForm {\n    IdtipoCatalogo: LookupEditor;\n    IdClave: IntegerEditor;\n    Descripcion: StringEditor;\n    Activo: BooleanEditor;\n}\n\nexport class CatalogosExpansionForm extends PrefixedContext {\n    static formKey = 'Expansion.CatalogosExpansion';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!CatalogosExpansionForm.init)  {\n            CatalogosExpansionForm.init = true;\n\n            var w0 = LookupEditor;\n            var w1 = IntegerEditor;\n            var w2 = StringEditor;\n            var w3 = BooleanEditor;\n\n            initFormType(CatalogosExpansionForm, [\n                'IdtipoCatalogo', w0,\n                'IdClave', w1,\n                'Descripcion', w2,\n                'Activo', w3\n            ]);\n        }\n    }\n}", "\uFEFFimport { StringEditor, LookupEditor, DateEditor, PrefixedContext } from \"@serenity-is/corelib\";\nimport { initFormType } from \"@serenity-is/corelib/q\";\n\nexport interface CategoriaExpansionForm {\n    LocalSap: StringEditor;\n    LocationType: LookupEditor;\n    Farmacia: StringEditor;\n    FechaApertura: DateEditor;\n    Reapertura: DateEditor;\n    Comsuc: StringEditor;\n    TipoEstaciona: LookupEditor;\n    NCajonesEstaciona: StringEditor;\n    Ciudad: StringEditor;\n    Estado: StringEditor;\n    Direccion: StringEditor;\n    NExterior: StringEditor;\n    Colonia: StringEditor;\n    Cp: StringEditor;\n    Latitud: StringEditor;\n    Longuitud: StringEditor;\n    FormatoFarmAlcance: LookupEditor;\n    Pantallas: StringEditor;\n    ProvMobiliario: LookupEditor;\n    ColorMob: StringEditor;\n    Dermo: StringEditor;\n}\n\nexport class CategoriaExpansionForm extends PrefixedContext {\n    static formKey = 'Expansion.CategoriaExpansion';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!CategoriaExpansionForm.init)  {\n            CategoriaExpansionForm.init = true;\n\n            var w0 = StringEditor;\n            var w1 = LookupEditor;\n            var w2 = DateEditor;\n\n            initFormType(CategoriaExpansionForm, [\n                'LocalSap', w0,\n                'LocationType', w1,\n                'Farmacia', w0,\n                'FechaApertura', w2,\n                'Reapertura', w2,\n                'Comsuc', w0,\n                'TipoEstaciona', w1,\n                'NCajonesEstaciona', w0,\n                'Ciudad', w0,\n                'Estado', w0,\n                'Direccion', w0,\n                'NExterior', w0,\n                'Colonia', w0,\n                'Cp', w0,\n                'Latitud', w0,\n                'Longuitud', w0,\n                'FormatoFarmAlcance', w1,\n                'Pantallas', w0,\n                'ProvMobiliario', w1,\n                'ColorMob', w0,\n                'Dermo', w0\n            ]);\n        }\n    }\n}"],
  "mappings": "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",
  "names": ["CatalogosExpansionColumns", "__name", "import_q", "CatalogosExpansionRow", "__name", "import_q", "CatalogosExpansionService", "x", "r", "s", "o", "CategoriaExpansionColumns", "__name", "import_q", "CategoriaExpansionRow", "__name", "import_q", "CategoriaExpansionService", "x", "r", "s", "o", "import_corelib", "import_q", "_CatalogosExpansionForm", "prefix", "w0", "w1", "w2", "w3", "CatalogosExpansionForm", "__name", "import_corelib", "import_q", "_CategoriaExpansionForm", "prefix", "w0", "w1", "w2", "CategoriaExpansionForm", "__name"]
}
