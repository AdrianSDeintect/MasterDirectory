{
  "version": 3,
  "sources": ["../../../Modules/ServerTypes/Catalogos/TipoCatalogosColumns.ts", "../../../Modules/ServerTypes/Catalogos/TipoCatalogosRow.ts", "../../../Modules/ServerTypes/Catalogos/TipoCatalogosService.ts", "../../../Modules/ServerTypes/Catalogos/TipoCategoriasColumns.ts", "../../../Modules/ServerTypes/Catalogos/TipoCategoriasRow.ts", "../../../Modules/ServerTypes/Catalogos/TipoCategoriasService.ts", "../../../Modules/ServerTypes/Catalogos/TipoCatalogosForm.ts", "../../../Modules/ServerTypes/Catalogos/TipoCategoriasForm.ts"],
  "sourcesContent": ["\uFEFFexport class TipoCatalogosColumns {\r\n    static columnsKey = 'Catalogos.TipoCatalogos';\r\n}", "\uFEFFimport { getLookup, getLookupAsync, fieldsProxy } from \"@serenity-is/corelib/q\";\n\nexport interface TipoCatalogosRow {\n    IdCons?: number;\n    IdtipoCategoria?: number;\n    IdtipoCatalogo?: number;\n    TipoCatalogo?: string;\n    Activo?: number;\n    NombreTipoCategoria?: string;\n}\n\nexport abstract class TipoCatalogosRow {\n    static readonly idProperty = 'IdCons';\n    static readonly nameProperty = 'TipoCatalogo';\n    static readonly localTextPrefix = 'Catalogos.TipoCatalogos';\n    static readonly lookupKey = 'Catalogos.TipoCatalogos';\n\n    /** @deprecated use getLookupAsync instead */\n    static getLookup() { return getLookup<TipoCatalogosRow>('Catalogos.TipoCatalogos') }\n    static async getLookupAsync() { return getLookupAsync<TipoCatalogosRow>('Catalogos.TipoCatalogos') }\n\n    static readonly deletePermission = 'Catalogos:TipoCatalogos:Delete';\n    static readonly insertPermission = 'Catalogos:TipoCatalogos:Modify';\n    static readonly readPermission = 'Catalogos:TipoCatalogos:View';\n    static readonly updatePermission = 'Catalogos:TipoCatalogos:Modify';\n\n    static readonly Fields = fieldsProxy<TipoCatalogosRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib/q\";\nimport { TipoCatalogosRow } from \"./TipoCatalogosRow\";\n\nexport namespace TipoCatalogosService {\n    export const baseUrl = 'Catalogos/TipoCatalogos';\n\n    export declare function Create(request: SaveRequest<TipoCatalogosRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<TipoCatalogosRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<TipoCatalogosRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<TipoCatalogosRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"Catalogos/TipoCatalogos/Create\",\n        Update: \"Catalogos/TipoCatalogos/Update\",\n        Delete: \"Catalogos/TipoCatalogos/Delete\",\n        Retrieve: \"Catalogos/TipoCatalogos/Retrieve\",\n        List: \"Catalogos/TipoCatalogos/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>TipoCatalogosService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFexport class TipoCategoriasColumns {\r\n    static columnsKey = 'Catalogos.TipoCategorias';\r\n}", "\uFEFFimport { getLookup, getLookupAsync, fieldsProxy } from \"@serenity-is/corelib/q\";\n\nexport interface TipoCategoriasRow {\n    IdtipoCategoria?: number;\n    TipoCategoria?: string;\n    Activo?: number;\n}\n\nexport abstract class TipoCategoriasRow {\n    static readonly idProperty = 'IdtipoCategoria';\n    static readonly nameProperty = 'TipoCategoria';\n    static readonly localTextPrefix = 'Catalogos.TipoCategorias';\n    static readonly lookupKey = 'Catalogos.TipoCategorias';\n\n    /** @deprecated use getLookupAsync instead */\n    static getLookup() { return getLookup<TipoCategoriasRow>('Catalogos.TipoCategorias') }\n    static async getLookupAsync() { return getLookupAsync<TipoCategoriasRow>('Catalogos.TipoCategorias') }\n\n    static readonly deletePermission = 'Catalogos:TipoCategorias:Delete';\n    static readonly insertPermission = 'Catalogos:TipoCategorias:Modify';\n    static readonly readPermission = 'Catalogos:TipoCategorias:View';\n    static readonly updatePermission = 'Catalogos:TipoCategorias:Modify';\n\n    static readonly Fields = fieldsProxy<TipoCategoriasRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib/q\";\nimport { TipoCategoriasRow } from \"./TipoCategoriasRow\";\n\nexport namespace TipoCategoriasService {\n    export const baseUrl = 'Catalogos/TipoCategorias';\n\n    export declare function Create(request: SaveRequest<TipoCategoriasRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<TipoCategoriasRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<TipoCategoriasRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<TipoCategoriasRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"Catalogos/TipoCategorias/Create\",\n        Update: \"Catalogos/TipoCategorias/Update\",\n        Delete: \"Catalogos/TipoCategorias/Delete\",\n        Retrieve: \"Catalogos/TipoCategorias/Retrieve\",\n        List: \"Catalogos/TipoCategorias/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>TipoCategoriasService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFimport { LookupEditor, IntegerEditor, StringEditor, BooleanEditor, PrefixedContext } from \"@serenity-is/corelib\";\nimport { initFormType } from \"@serenity-is/corelib/q\";\n\nexport interface TipoCatalogosForm {\n    IdtipoCategoria: LookupEditor;\n    IdtipoCatalogo: IntegerEditor;\n    TipoCatalogo: StringEditor;\n    Activo: BooleanEditor;\n}\n\nexport class TipoCatalogosForm extends PrefixedContext {\n    static formKey = 'Catalogos.TipoCatalogos';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!TipoCatalogosForm.init)  {\n            TipoCatalogosForm.init = true;\n\n            var w0 = LookupEditor;\n            var w1 = IntegerEditor;\n            var w2 = StringEditor;\n            var w3 = BooleanEditor;\n\n            initFormType(TipoCatalogosForm, [\n                'IdtipoCategoria', w0,\n                'IdtipoCatalogo', w1,\n                'TipoCatalogo', w2,\n                'Activo', w3\n            ]);\n        }\n    }\n}", "\uFEFFimport { IntegerEditor, StringEditor, BooleanEditor, PrefixedContext } from \"@serenity-is/corelib\";\nimport { initFormType } from \"@serenity-is/corelib/q\";\n\nexport interface TipoCategoriasForm {\n    IdtipoCategoria: IntegerEditor;\n    TipoCategoria: StringEditor;\n    Activo: BooleanEditor;\n}\n\nexport class TipoCategoriasForm extends PrefixedContext {\n    static formKey = 'Catalogos.TipoCategorias';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!TipoCategoriasForm.init)  {\n            TipoCategoriasForm.init = true;\n\n            var w0 = IntegerEditor;\n            var w1 = StringEditor;\n            var w2 = BooleanEditor;\n\n            initFormType(TipoCategoriasForm, [\n                'IdtipoCategoria', w0,\n                'TipoCategoria', w1,\n                'Activo', w2\n            ]);\n        }\n    }\n}"],
  "mappings": "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",
  "names": ["TipoCatalogosColumns", "__name", "import_q", "TipoCatalogosRow", "__async", "__name", "import_q", "TipoCatalogosService", "x", "r", "s", "o", "TipoCategoriasColumns", "__name", "import_q", "TipoCategoriasRow", "__async", "__name", "import_q", "TipoCategoriasService", "x", "r", "s", "o", "import_corelib", "import_q", "_TipoCatalogosForm", "prefix", "w0", "w1", "w2", "w3", "TipoCatalogosForm", "__name", "import_corelib", "import_q", "_TipoCategoriasForm", "prefix", "w0", "w1", "w2", "TipoCategoriasForm", "__name"]
}
