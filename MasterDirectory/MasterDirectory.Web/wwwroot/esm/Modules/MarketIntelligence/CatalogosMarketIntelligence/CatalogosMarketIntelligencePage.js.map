{
  "version": 3,
  "sources": ["../../../../../Modules/MarketIntelligence/CatalogosMarketIntelligence/CatalogosMarketIntelligencePage.ts", "../../../../../Modules/MarketIntelligence/CatalogosMarketIntelligence/CatalogosMarketIntelligenceGrid.ts", "../../../../../Modules/ServerTypes/MarketIntelligence/CatalogosMarketIntelligenceColumns.ts", "../../../../../Modules/ServerTypes/MarketIntelligence/CatalogosMarketIntelligenceForm.ts", "../../../../../Modules/ServerTypes/MarketIntelligence/CatalogosMarketIntelligenceRow.ts", "../../../../../Modules/ServerTypes/MarketIntelligence/CatalogosMarketIntelligenceService.ts", "../../../../../Modules/MarketIntelligence/CatalogosMarketIntelligence/CatalogosMarketIntelligenceDialog.ts"],
  "sourcesContent": ["\uFEFFimport { initFullHeightGridPage } from '@serenity-is/corelib/q';\r\nimport { CatalogosMarketIntelligenceGrid } from './CatalogosMarketIntelligenceGrid';\r\n\r\nexport default function pageInit() {\r\n    initFullHeightGridPage(new CatalogosMarketIntelligenceGrid($('#GridDiv')).element);\r\n}", "import { Decorators, EntityGrid, ToolButton } from '@serenity-is/corelib';\r\nimport { CatalogosMarketIntelligenceColumns, CatalogosMarketIntelligenceRow, CatalogosMarketIntelligenceService } from '../../ServerTypes/MarketIntelligence';\r\nimport { CatalogosMarketIntelligenceDialog } from './CatalogosMarketIntelligenceDialog';\nimport { ExcelExportHelper, PdfExportHelper, ReportHelper } from \"@serenity-is/extensions\";\r\n\r\n@Decorators.registerClass('MasterDirectory.MarketIntelligence.CatalogosMarketIntelligenceGrid')\r\nexport class CatalogosMarketIntelligenceGrid extends EntityGrid<CatalogosMarketIntelligenceRow, any> {\r\n    protected getColumnsKey() { return CatalogosMarketIntelligenceColumns.columnsKey; }\r\n    protected getDialogType() { return CatalogosMarketIntelligenceDialog; }\r\n    protected getRowDefinition() { return CatalogosMarketIntelligenceRow; }\r\n    protected getService() { return CatalogosMarketIntelligenceService.baseUrl; }\r\n\r\n    constructor(container: JQuery) {\r\n        super(container);\r\n    }\n\n    protected getButtons(): ToolButton[] {\r\n        var buttons = super.getButtons();\r\n\r\n        buttons.push(ExcelExportHelper.createToolButton({\r\n            grid: this,\r\n            service: CatalogosMarketIntelligenceService.baseUrl + '/ListExcel',\r\n            onViewSubmit: () => this.onViewSubmit(),\r\n            title: \"Exportar Excel\",\r\n            separator: true\r\n        }));\r\n\r\n        buttons.push(PdfExportHelper.createToolButton({\r\n            grid: this,\n            title: \"Exportar PDF\",\r\n            onViewSubmit: () => this.onViewSubmit()\r\n        }));\r\n\r\n        return buttons;\r\n    }\n\r\n}", "\uFEFFexport class CatalogosMarketIntelligenceColumns {\r\n    static columnsKey = 'MarketIntelligence.CatalogosMarketIntelligence';\r\n}", "\uFEFFimport { LookupEditor, IntegerEditor, StringEditor, BooleanEditor, PrefixedContext } from \"@serenity-is/corelib\";\nimport { initFormType } from \"@serenity-is/corelib/q\";\n\nexport interface CatalogosMarketIntelligenceForm {\n    IdtipoCatalogo: LookupEditor;\n    IdClave: IntegerEditor;\n    Descripcion: StringEditor;\n    Activo: BooleanEditor;\n}\n\nexport class CatalogosMarketIntelligenceForm extends PrefixedContext {\n    static formKey = 'MarketIntelligence.CatalogosMarketIntelligence';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!CatalogosMarketIntelligenceForm.init)  {\n            CatalogosMarketIntelligenceForm.init = true;\n\n            var w0 = LookupEditor;\n            var w1 = IntegerEditor;\n            var w2 = StringEditor;\n            var w3 = BooleanEditor;\n\n            initFormType(CatalogosMarketIntelligenceForm, [\n                'IdtipoCatalogo', w0,\n                'IdClave', w1,\n                'Descripcion', w2,\n                'Activo', w3\n            ]);\n        }\n    }\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib/q\";\n\nexport interface CatalogosMarketIntelligenceRow {\n    IdCons?: number;\n    IdtipoCatalogo?: number;\n    IdClave?: number;\n    Descripcion?: string;\n    Activo?: number;\n    NombreTipoCatalogo?: string;\n}\n\nexport abstract class CatalogosMarketIntelligenceRow {\n    static readonly idProperty = 'IdCons';\n    static readonly nameProperty = 'Descripcion';\n    static readonly localTextPrefix = 'MarketIntelligence.CatalogosMarketIntelligence';\n    static readonly deletePermission = 'MarketIntelligence:Delete';\n    static readonly insertPermission = 'MarketIntelligence:Modify';\n    static readonly readPermission = 'MarketIntelligence:View';\n    static readonly updatePermission = 'MarketIntelligence:Modify';\n\n    static readonly Fields = fieldsProxy<CatalogosMarketIntelligenceRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib/q\";\nimport { CatalogosMarketIntelligenceRow } from \"./CatalogosMarketIntelligenceRow\";\n\nexport namespace CatalogosMarketIntelligenceService {\n    export const baseUrl = 'MarketIntelligence/CatalogosMarketIntelligence';\n\n    export declare function Create(request: SaveRequest<CatalogosMarketIntelligenceRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<CatalogosMarketIntelligenceRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<CatalogosMarketIntelligenceRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<CatalogosMarketIntelligenceRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"MarketIntelligence/CatalogosMarketIntelligence/Create\",\n        Update: \"MarketIntelligence/CatalogosMarketIntelligence/Update\",\n        Delete: \"MarketIntelligence/CatalogosMarketIntelligence/Delete\",\n        Retrieve: \"MarketIntelligence/CatalogosMarketIntelligence/Retrieve\",\n        List: \"MarketIntelligence/CatalogosMarketIntelligence/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>CatalogosMarketIntelligenceService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFimport { Decorators, EntityDialog } from '@serenity-is/corelib';\r\nimport { CatalogosMarketIntelligenceForm, CatalogosMarketIntelligenceRow, CatalogosMarketIntelligenceService } from '../../ServerTypes/MarketIntelligence';\r\n\r\n@Decorators.registerClass('MasterDirectory.MarketIntelligence.CatalogosMarketIntelligenceDialog')\r\nexport class CatalogosMarketIntelligenceDialog extends EntityDialog<CatalogosMarketIntelligenceRow, any> {\r\n    protected getFormKey() { return CatalogosMarketIntelligenceForm.formKey; }\r\n    protected getRowDefinition() { return CatalogosMarketIntelligenceRow; }\r\n    protected getService() { return CatalogosMarketIntelligenceService.baseUrl; }\r\n\r\n    protected form = new CatalogosMarketIntelligenceForm(this.idPrefix);\r\n}"],
  "mappings": "qLAAC,IAAAA,EAAuC,SCAxC,IAAAC,EAAmD,SCA3C,IAAMC,EAAN,KAAyC,CAEjD,EAFcC,EAAAD,EAAA,sCAAAA,EACH,WAAa,iDCDvB,IAAAE,EAA0F,SAC3FC,EAA6B,SAStB,IAAMC,EAAN,cAA8C,iBAAgB,CAIjE,YAAYC,EAAgB,CAGxB,GAFA,MAAMA,CAAM,EAER,CAACD,EAAgC,KAAO,CACxCA,EAAgC,KAAO,GAEvC,IAAIE,EAAK,eACLC,EAAK,gBACLC,EAAK,eACLC,EAAK,mBAET,gBAAaL,EAAiC,CAC1C,iBAAkBE,EAClB,UAAWC,EACX,cAAeC,EACf,SAAUC,CACd,CAAC,CACL,CACJ,CACJ,EAvBaC,EAANN,EAAMO,EAAAD,EAAA,mCAAAA,EACF,QAAU,iDCXpB,IAAAE,EAA4B,SAWtB,IAAeC,EAAf,KAA8C,CAUrD,EAVsBC,EAAAD,EAAA,kCAAAA,EACF,WAAa,SADXA,EAEF,aAAe,cAFbA,EAGF,gBAAkB,iDAHhBA,EAIF,iBAAmB,4BAJjBA,EAKF,iBAAmB,4BALjBA,EAMF,eAAiB,0BANfA,EAOF,iBAAmB,4BAPjBA,EASF,UAAS,eAA4C,ECpBxE,IAAAE,EAAuK,SAGvJC,OACAA,EAAA,QAAU,iDAQVA,EAAA,QAAU,CACnB,OAAQ,wDACR,OAAQ,wDACR,OAAQ,wDACR,SAAU,0DACV,KAAM,qDACV,EAEA,CACI,SACA,SACA,SACA,WACA,MACJ,EAAE,QAAQC,GAAK,CACLD,EAAoCC,CAAC,EAAI,SAAUC,EAAGC,EAAGC,EAAG,CAC9D,SAAO,kBAAeJ,EAAA,QAAU,IAAMC,EAAGC,EAAGC,EAAGC,CAAC,CACpD,CACJ,CAAC,IA3BYJ,MAAA,KCHhB,IAAAK,EAAyC,SAInC,IAAMC,EAAN,cAAgD,cAAkD,CAAlG,kCAKH,KAAU,KAAO,IAAIC,EAAgC,KAAK,QAAQ,EAJxD,YAAa,CAAE,OAAOA,EAAgC,OAAS,CAC/D,kBAAmB,CAAE,OAAOC,CAAgC,CAC5D,YAAa,CAAE,OAAOC,EAAmC,OAAS,CAGhF,EANaC,EAAAJ,EAAA,qCAAAA,EAANK,EAAA,CADN,aAAW,cAAc,sEAAsE,GACnFL,GLDb,IAAAM,EAAiE,SAG1D,IAAMC,EAAN,cAA8C,YAAgD,CACvF,eAAgB,CAAE,OAAOC,EAAmC,UAAY,CACxE,eAAgB,CAAE,OAAOC,CAAmC,CAC5D,kBAAmB,CAAE,OAAOC,CAAgC,CAC5D,YAAa,CAAE,OAAOC,EAAmC,OAAS,CAE5E,YAAYC,EAAmB,CAC3B,MAAMA,CAAS,CACnB,CAEU,YAA2B,CACjC,IAAIC,EAAU,MAAM,WAAW,EAE/B,OAAAA,EAAQ,KAAK,oBAAkB,iBAAiB,CAC5C,KAAM,KACN,QAASF,EAAmC,QAAU,aACtD,aAAc,IAAM,KAAK,aAAa,EACtC,MAAO,iBACP,UAAW,EACf,CAAC,CAAC,EAEFE,EAAQ,KAAK,kBAAgB,iBAAiB,CAC1C,KAAM,KACN,MAAO,eACP,aAAc,IAAM,KAAK,aAAa,CAC1C,CAAC,CAAC,EAEKA,CACX,CAEJ,EA9BaC,EAAAP,EAAA,mCAAAA,EAANQ,EAAA,CADN,aAAW,cAAc,oEAAoE,GACjFR,GDHE,SAARS,GAA4B,IAC/B,0BAAuB,IAAIC,EAAgC,EAAE,UAAU,CAAC,EAAE,OAAO,CACrF,CAFwBC,EAAAF,EAAA",
  "names": ["import_q", "import_corelib", "CatalogosMarketIntelligenceColumns", "__name", "import_corelib", "import_q", "_CatalogosMarketIntelligenceForm", "prefix", "w0", "w1", "w2", "w3", "CatalogosMarketIntelligenceForm", "__name", "import_q", "CatalogosMarketIntelligenceRow", "__name", "import_q", "CatalogosMarketIntelligenceService", "x", "r", "s", "o", "import_corelib", "CatalogosMarketIntelligenceDialog", "CatalogosMarketIntelligenceForm", "CatalogosMarketIntelligenceRow", "CatalogosMarketIntelligenceService", "__name", "__decorateClass", "import_extensions", "CatalogosMarketIntelligenceGrid", "CatalogosMarketIntelligenceColumns", "CatalogosMarketIntelligenceDialog", "CatalogosMarketIntelligenceRow", "CatalogosMarketIntelligenceService", "container", "buttons", "__name", "__decorateClass", "pageInit", "CatalogosMarketIntelligenceGrid", "__name"]
}
